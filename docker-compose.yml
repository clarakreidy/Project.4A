version: '3.7'

services:
  elasticsearch:
    image: elasticsearch:${ELK_VERSION}
    container_name: elasticsearch
    ports:
        - '9200:9200'
        - '9300:9300'
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - ESJ_JAVA_OPTS="-Xmx256m -Xms256m"
    volumes:
        - ./.docker/elasticsearch/esdata:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: curl -s https://localhost:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5
    networks: 
      - elk

  logstash:
    build:
      context: ./logstash/
    image: logstash_4a:latest
    container_name: logstash
    hostname: logstash
    command:
      - logstash
    ports:
      - '5044:5044'
      - '5000:5000/tcp'
      - '5000:5000/udp'
      - '9600:9600'
    environment:
      - 'LS_JAVA_OPTS=-Xmx256m -Xms256m'
      - 'ELASTICSEARCH_URL=http://elasticsearch:9200'
    networks:
      - elk
    depends_on:
      - elasticsearch
    healthcheck:
      test: bin/logstash -t
      interval: 20s
      timeout: 5s
      retries: 5

  kibana:
    image: kibana:${ELK_VERSION}
    container_name: kibana
    ports:
      - '5601:5601'
    depends_on:
      - elasticsearch
      - logstash
    environment:
      - "ELASTICSEARCH_URL=http://elasticsearch:9200"
    healthcheck:
      test: curl -s https://localhost:5601 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5
    networks: 
      - elk

  wizard:
    container_name: wizard
    build: ./wizard
    depends_on:
      - elasticsearch
      - kibana
      - logstash
    networks:
      - elk

networks:
  elk:
    driver: bridge
